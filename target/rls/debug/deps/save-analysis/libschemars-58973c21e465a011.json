{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8","program":"C:\\Users\\dragon\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","schemars","--edition=2018","C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"schemars_derive\"","-C","metadata=58973c21e465a011","-C","extra-filename=-58973c21e465a011","--out-dir","d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps","-L","dependency=d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps","--extern","dyn_clone=d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps\\libdyn_clone-5d3ddd4e887f6f9f.rmeta","--extern","schemars_derive=d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps\\schemars_derive-448110ee5dea1740.dll","--extern","serde=d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps\\libserde-9460abf6aa55518e.rmeta","--extern","serde_json=d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps\\libserde_json-d788dc69cda3b88f.rmeta","--cap-lints","allow","--cfg","std_atomic64","--cfg","std_atomic","--error-format=json","--sysroot","C:\\Users\\dragon\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\job\\cosmwasm\\cw721-main\\target\\rls\\debug\\deps\\libschemars-58973c21e465a011.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[4121244981791923121,0]},"crate_root":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src","external_crates":[{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7449352764569583903,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1631835697898691535,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9301228628034177852,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2093790580695599362,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6737091961566752624,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[5404310561352066988,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1962508984173027375,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6035099278034299636,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2965237822319993894,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18202861773354635365,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5256087510298979761,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9054181207765082768,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15345473809858678681,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","num":14,"id":{"name":"schemars_derive","disambiguator":[3167937500074390917,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","num":15,"id":{"name":"serde_json","disambiguator":[9286205174190877742,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","num":16,"id":{"name":"serde","disambiguator":[17943458972344038487,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","num":17,"id":{"name":"serde_derive","disambiguator":[7062186260979383343,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","num":18,"id":{"name":"itoa","disambiguator":[6733503876150171170,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","num":19,"id":{"name":"ryu","disambiguator":[4621294549486926879,0]}},{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","num":20,"id":{"name":"dyn_clone","disambiguator":[3744781258641924370,0]}}],"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":12512,"line_start":1,"line_end":406,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9990,"byte_end":9991,"line_start":325,"line_end":325,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10068,"byte_end":10078,"line_start":329,"line_end":329,"column_start":9,"column_end":19},"alias_span":null,"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":12512,"line_start":1,"line_end":406,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":51},{"krate":0,"index":288},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":459},{"krate":0,"index":543},{"krate":0,"index":597},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"*\nGenerate JSON Schema documents from Rust code\n\n## Basic Usage\n\nIf you don't really care about the specifics, the easiest way to generate a JSON schema for your types is to `#[derive(JsonSchema)]` and use the `schema_for!` macro. All fields of the type must also implement `JsonSchema` - Schemars implements this for many standard library types.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\n\n#[derive(JsonSchema)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(JsonSchema)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"my_bool\",\n        \"my_int\"\n    ],\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        },\n        \"my_nullable_enum\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        }\n    },\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StringNewType\"\n                    ],\n                    \"properties\": {\n                        \"StringNewType\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"additionalProperties\": false\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"StructVariant\"\n                    ],\n                    \"properties\": {\n                        \"StructVariant\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"floats\"\n                            ],\n                            \"properties\": {\n                                \"floats\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"float\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"additionalProperties\": false\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n### Serde Compatibility\n\nOne of the main aims of this library is compatibility with [Serde](https://github.com/serde-rs/serde). Any generated schema *should* match how [serde_json](https://github.com/serde-rs/json) would serialize/deserialize to/from JSON. To support this, Schemars will check for any `#[serde(...)]` attributes on types that derive `JsonSchema`, and adjust the generated schema accordingly.\n\n```rust\nuse schemars::{schema_for, JsonSchema};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(rename_all = \"camelCase\", deny_unknown_fields)]\npub struct MyStruct {\n    #[serde(rename = \"myNumber\")]\n    pub my_int: i32,\n    pub my_bool: bool,\n    #[serde(default)]\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Deserialize, Serialize, JsonSchema)]\n#[serde(untagged)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for!(MyStruct);\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"type\": \"object\",\n    \"required\": [\n        \"myBool\",\n        \"myNumber\"\n    ],\n    \"properties\": {\n        \"myBool\": {\n            \"type\": \"boolean\"\n        },\n        \"myNullableEnum\": {\n            \"default\": null,\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/definitions/MyEnum\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ]\n        },\n        \"myNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    },\n    \"additionalProperties\": false,\n    \"definitions\": {\n        \"MyEnum\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"floats\"\n                    ],\n                    \"properties\": {\n                        \"floats\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"float\"\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}\n```\n</details>\n\n`#[serde(...)]` attributes can be overriden using `#[schemars(...)]` attributes, which behave identically (e.g. `#[schemars(rename_all = \"camelCase\")]`). You may find this useful if you want to change the generated schema without affecting Serde's behaviour, or if you're just not using Serde.\n\n### Schema from Example Value\n\nIf you want a schema for a type that can't/doesn't implement `JsonSchema`, but does implement `serde::Serialize`, then you can generate a JSON schema from a value of that type. However, this schema will generally be less precise than if the type implemented `JsonSchema` - particularly when it involves enums, since schemars will not make any assumptions about the structure of an enum based on a single variant.\n\n```rust\nuse schemars::schema_for_value;\nuse serde::Serialize;\n\n#[derive(Serialize)]\npub struct MyStruct {\n    pub my_int: i32,\n    pub my_bool: bool,\n    pub my_nullable_enum: Option<MyEnum>,\n}\n\n#[derive(Serialize)]\npub enum MyEnum {\n    StringNewType(String),\n    StructVariant { floats: Vec<f32> },\n}\n\nlet schema = schema_for_value!(MyStruct {\n    my_int: 123,\n    my_bool: true,\n    my_nullable_enum: Some(MyEnum::StringNewType(\"foo\".to_string()))\n});\nprintln!(\"{}\", serde_json::to_string_pretty(&schema).unwrap());\n```\n\n<details>\n<summary>Click to see the output JSON schema...</summary>\n\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"MyStruct\",\n    \"examples\": [\n        {\n            \"my_bool\": true,\n            \"my_int\": 123,\n            \"my_nullable_enum\": {\n                \"StringNewType\": \"foo\"\n            }\n        }\n    ],\n    \"type\": \"object\",\n    \"properties\": {\n        \"my_bool\": {\n            \"type\": \"boolean\"\n        },\n        \"my_int\": {\n            \"type\": \"integer\"\n        },\n        \"my_nullable_enum\": true\n    }\n}\n```\n</details>\n\n## Feature Flags\n- `derive` (enabled by default) - provides `#[derive(JsonSchema)]` macro\n- `impl_json_schema` - implements `JsonSchema` for Schemars types themselves\n- `preserve_order` - keep the order of struct fields in `Schema` and `SchemaObject`\n\n## Optional Dependencies\nSchemars can implement `JsonSchema` on types from several popular crates, enabled via optional dependencies (dependency versions are shown in brackets):\n- [`chrono`](https://crates.io/crates/chrono) (^0.4)\n- [`indexmap`](https://crates.io/crates/indexmap) (^1.2)\n- [`either`](https://crates.io/crates/either) (^1.3)\n- [`uuid`](https://crates.io/crates/uuid) (^0.8)\n- [`smallvec`](https://crates.io/crates/smallvec) (^1.0)\n- [`arrayvec`](https://crates.io/crates/arrayvec) (^0.5)\n- [`url`](https://crates.io/crates/url) (^2.0)\n- [`bytes`](https://crates.io/crates/bytes) (^1.0)\n- [`enumset`](https://crates.io/crates/enumset) (^1.0)\n- [`rust_decimal`](https://crates.io/crates/rust_decimal) (^1.0)\n- [`bigdecimal`](https://crates.io/crates/bigdecimal) (^0.3)\n\nFor example, to implement `JsonSchema` on types from `chrono`, enable it as a feature in the `schemars` dependency in your `Cargo.toml` like so:\n\n```toml\n[dependencies]\nschemars = { version = \"0.8\", features = [\"chrono\"] }\n```\n*/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":24,"byte_end":8389,"line_start":2,"line_end":282,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8730,"byte_end":8733,"line_start":290,"line_end":290,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"std::collections::BTreeMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" The map type used by schemars types.","sig":null,"attributes":[{"value":"/ The map type used by schemars types.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8391,"byte_end":8431,"line_start":284,"line_end":284,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8432,"byte_end":8435,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeMap` or `IndexMap` can be used, but this may change to a different implementation","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8436,"byte_end":8539,"line_start":286,"line_end":286,"column_start":1,"column_end":104}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8540,"byte_end":8601,"line_start":287,"line_end":287,"column_start":1,"column_end":62}},{"value":"/ The `IndexMap` will be used when the `preserve_order` feature flag is set.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8602,"byte_end":8680,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8681,"byte_end":8720,"line_start":289,"line_end":289,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9052,"byte_end":9055,"line_start":297,"line_end":297,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[{"value":"/ The set type used by schemars types.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8858,"byte_end":8898,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8899,"byte_end":8902,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Currently a `BTreeSet`, but this may change to a different implementation","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8903,"byte_end":8980,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"/ with a similar interface in a future version of schemars.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":8981,"byte_end":9042,"line_start":296,"line_end":296,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9370,"byte_end":9378,"line_start":304,"line_end":304,"column_start":10,"column_end":18},"name":"MapEntry","qualname":"::MapEntry","value":"std::collections::btree_map::Entry","parent":null,"children":[],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This is constructed from the `entry` method on `BTreeMap` or `IndexMap`,\n depending on whether the `preserve_order` feature flag is set.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9093,"byte_end":9173,"line_start":299,"line_end":299,"column_start":1,"column_end":81}},{"value":"/ This is constructed from the `entry` method on `BTreeMap` or `IndexMap`,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9177,"byte_end":9253,"line_start":301,"line_end":301,"column_start":1,"column_end":77}},{"value":"/ depending on whether the `preserve_order` feature flag is set.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9254,"byte_end":9320,"line_start":302,"line_end":302,"column_start":1,"column_end":67}},{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9321,"byte_end":9360,"line_start":303,"line_end":303,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":13143,"byte_end":13150,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"pub fn flatten(Self, Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[{"value":"/ This function is only public for use by schemars_derive.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":12984,"byte_end":13044,"line_start":5,"line_end":5,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":13049,"byte_end":13052,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ It should not be considered part of the public API.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":13057,"byte_end":13112,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"_private","qualname":"::_private","value":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"decl_id":null,"docs":" This module is only public for use by `schemars_derive`. It should not need to be used by code\n outside of `schemars`, and should not be considered part of the public API.\n","sig":null,"attributes":[{"value":"/ This module is only public for use by `schemars_derive`. It should not need to be used by code","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9606,"byte_end":9704,"line_start":314,"line_end":314,"column_start":1,"column_end":99}},{"value":"/ outside of `schemars`, and should not be considered part of the public API.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9705,"byte_end":9784,"line_start":315,"line_end":315,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":65393,"byte_end":65416,"line_start":9,"line_end":9,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::_private::json_schema_for_flatten","value":"pub fn json_schema_for_flatten<T: ?Sized +\n                               JsonSchema>(&mut SchemaGenerator, bool)\n-> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":65865,"byte_end":65879,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"apply_metadata","qualname":"::_private::apply_metadata","value":"pub fn apply_metadata(Schema, Metadata) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66753,"byte_end":66774,"line_start":53,"line_end":53,"column_start":12,"column_end":33},"name":"MaybeSerializeWrapper","qualname":"::_private::MaybeSerializeWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66778,"byte_end":66783,"line_start":53,"line_end":53,"column_start":37,"column_end":42},"name":"0","qualname":"::_private::MaybeSerializeWrapper::0","value":"T","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66797,"byte_end":66808,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"NoSerialize","qualname":"::_private::NoSerialize","value":"NoSerialize: Sized","parent":null,"children":[{"krate":0,"index":453}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66825,"byte_end":66839,"line_start":56,"line_end":56,"column_start":8,"column_end":22},"name":"maybe_to_value","qualname":"::_private::NoSerialize::maybe_to_value","value":"pub fn maybe_to_value(Self) -> Option<Value>","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66974,"byte_end":66988,"line_start":64,"line_end":64,"column_start":12,"column_end":26},"name":"maybe_to_value","qualname":"<MaybeSerializeWrapper<T>>::maybe_to_value","value":"pub fn maybe_to_value(Self) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":1489},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":1501},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":538},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":540}],"decl_id":null,"docs":"JSON Schema generator and settings.","sig":null,"attributes":[{"value":"*\nJSON Schema generator and settings.\n\nThis module is useful if you want more control over how the schema generated than the [`schema_for!`] macro gives you.\nThere are two main types in this module:two main types in this module:\n* [`SchemaSettings`], which defines what JSON Schema features should be used when generating schemas (for example, how `Option`s should be represented).\n* [`SchemaGenerator`], which manages the generation of a schema document.\n*/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":67139,"byte_end":67599,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68219,"byte_end":68233,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, definitions_path, meta_schema, visitors, inline_subschemas }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[{"value":"/ Settings to customize how Schemas are generated.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":67766,"byte_end":67818,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":67819,"byte_end":67822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The default settings currently conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7), but this is liable to change in a future version of Schemars if support for other JSON Schema versions is added.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":67823,"byte_end":68062,"line_start":18,"line_end":18,"column_start":1,"column_end":240}},{"value":"/ If you require your generated schemas to conform to draft 7, consider using the [`draft07`](#method.draft07) method.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68063,"byte_end":68183,"line_start":19,"line_end":19,"column_start":1,"column_end":121}}]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68468,"byte_end":68483,"line_start":27,"line_end":27,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68240,"byte_end":68324,"line_start":22,"line_end":22,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68329,"byte_end":68332,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This is not part of the JSON Schema spec, but is used in Swagger/OpenAPI schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68337,"byte_end":68422,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68427,"byte_end":68430,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68435,"byte_end":68459,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68692,"byte_end":68712,"line_start":31,"line_end":31,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[{"value":"/ If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68495,"byte_end":68647,"line_start":28,"line_end":28,"column_start":5,"column_end":157}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68652,"byte_end":68655,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68660,"byte_end":68683,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68886,"byte_end":68902,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[{"value":"/ A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68724,"byte_end":68829,"line_start":32,"line_end":32,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68834,"byte_end":68837,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"#/definitions/\"`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68842,"byte_end":68877,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69079,"byte_end":69090,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[{"value":"/ The URI of the meta-schema describing the structure of the generated schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":68916,"byte_end":68997,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69002,"byte_end":69005,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Defaults to `\"http://json-schema.org/draft-07/schema#\"`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69010,"byte_end":69070,"line_start":38,"line_end":38,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69191,"byte_end":69199,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"visitors","qualname":"::gen::SchemaSettings::visitors","value":"std::vec::Vec<std::boxed::Box<(dyn gen::GenVisitor + 'static)>>","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" A list of visitors that get applied to all generated root schemas.\n","sig":null,"attributes":[{"value":"/ A list of visitors that get applied to all generated root schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69112,"byte_end":69182,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69418,"byte_end":69435,"line_start":47,"line_end":47,"column_start":9,"column_end":26},"name":"inline_subschemas","qualname":"::gen::SchemaSettings::inline_subschemas","value":"bool","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" Inline all subschemas instead of using references.","sig":null,"attributes":[{"value":"/ Inline all subschemas instead of using references.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69231,"byte_end":69285,"line_start":42,"line_end":42,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69290,"byte_end":69293,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Some references may still be generated in schemas for recursive types.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69298,"byte_end":69372,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69377,"byte_end":69380,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69385,"byte_end":69409,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69740,"byte_end":69747,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"pub fn draft07() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69603,"byte_end":69728,"line_start":58,"line_end":58,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":70319,"byte_end":70331,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"pub fn draft2019_09() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":70156,"byte_end":70307,"line_start":71,"line_end":71,"column_start":5,"column_end":156}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":70886,"byte_end":70894,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"pub fn openapi3() -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[{"value":"/ Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":70726,"byte_end":70874,"line_start":84,"line_end":84,"column_start":5,"column_end":153}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72048,"byte_end":72052,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"pub fn with<impl FnOnce(&mut Self): FnOnce(&mut Self) ->\n            ()>(Self, impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[{"value":"/ Modifies the `SchemaSettings` by calling the given function.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71653,"byte_end":71717,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71722,"byte_end":71725,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71730,"byte_end":71743,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71748,"byte_end":71755,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::{SchemaGenerator, SchemaSettings};","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71760,"byte_end":71817,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71822,"byte_end":71825,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let settings = SchemaSettings::default().with(|s| {","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71830,"byte_end":71885,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/     s.option_nullable = true;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71890,"byte_end":71923,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/     s.option_add_null_type = false;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71928,"byte_end":71967,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71972,"byte_end":71979,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ let gen = settings.into_generator();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":71984,"byte_end":72024,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72029,"byte_end":72036,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72289,"byte_end":72301,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"with_visitor","qualname":"<SchemaSettings>::with_visitor","value":"pub fn with_visitor<impl Visitor + Debug + Clone + 'static: Visitor + Debug +\n                    Clone +\n                    'static>(Self, impl Visitor + Debug + Clone + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.\n","sig":null,"attributes":[{"value":"/ Appends the given visitor to the list of [visitors](SchemaSettings::visitors) for these `SchemaSettings`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72168,"byte_end":72277,"line_start":125,"line_end":125,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72513,"byte_end":72527,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"pub fn into_generator(Self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[{"value":"/ Creates a new [`SchemaGenerator`] using these settings.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72442,"byte_end":72501,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72952,"byte_end":72967,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[{"value":"/ The main type used to generate JSON Schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72599,"byte_end":72647,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72648,"byte_end":72651,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72652,"byte_end":72665,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72666,"byte_end":72673,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72674,"byte_end":72727,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72728,"byte_end":72731,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72732,"byte_end":72757,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72758,"byte_end":72779,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72780,"byte_end":72797,"line_start":145,"line_end":145,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72798,"byte_end":72803,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72804,"byte_end":72807,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72808,"byte_end":72849,"line_start":148,"line_end":148,"column_start":1,"column_end":42}},{"value":"/ let schema = gen.into_root_schema_for::<MyStruct>();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72850,"byte_end":72906,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":72907,"byte_end":72914,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73566,"byte_end":73569,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"pub fn new(SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[{"value":"/ Creates a new `SchemaGenerator` using the given settings.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73493,"byte_end":73554,"line_start":175,"line_end":175,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74055,"byte_end":74063,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"pub fn settings(&Self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[{"value":"/ Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73719,"byte_end":73791,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73796,"byte_end":73799,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73804,"byte_end":73817,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73822,"byte_end":73829,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use schemars::gen::SchemaGenerator;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73834,"byte_end":73873,"line_start":187,"line_end":187,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73878,"byte_end":73881,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let gen = SchemaGenerator::default();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73886,"byte_end":73927,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ let settings = gen.settings();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73932,"byte_end":73966,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73971,"byte_end":73974,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(settings.option_add_null_type, true);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73979,"byte_end":74031,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74036,"byte_end":74043,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74193,"byte_end":74208,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"pub fn make_extensible(&Self, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This method no longer has any effect.\"","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74126,"byte_end":74181,"line_start":198,"line_end":198,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74314,"byte_end":74328,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"pub fn schema_for_any(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(true)` instead\"","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74252,"byte_end":74302,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74449,"byte_end":74464,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"pub fn schema_for_none(&Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use `Schema::Bool(false)` instead\"","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74386,"byte_end":74437,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":75118,"byte_end":75131,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"pub fn subschema_for<T: ?Sized + JsonSchema>(&mut Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74523,"byte_end":74650,"line_start":211,"line_end":211,"column_start":5,"column_end":132}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74655,"byte_end":74658,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If `T` is [referenceable](JsonSchema::is_referenceable), this will add `T`'s schema to this generator's definitions, and","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74663,"byte_end":74787,"line_start":213,"line_end":213,"column_start":5,"column_end":129}},{"value":"/ return a `$ref` schema referencing that schema. Otherwise, this method behaves identically to [`JsonSchema::json_schema`].","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74792,"byte_end":74918,"line_start":214,"line_end":214,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74923,"byte_end":74926,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":74931,"byte_end":75042,"line_start":216,"line_end":216,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":75047,"byte_end":75106,"line_start":217,"line_end":217,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76379,"byte_end":76390,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"pub fn definitions(&Self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76107,"byte_end":76220,"line_start":244,"line_end":244,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76225,"byte_end":76228,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76233,"byte_end":76347,"line_start":246,"line_end":246,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76352,"byte_end":76367,"line_start":247,"line_end":247,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76741,"byte_end":76756,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"definitions_mut","qualname":"<SchemaGenerator>::definitions_mut","value":"pub fn definitions_mut(&mut Self) -> &mut Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[{"value":"/ Mutably borrows the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76461,"byte_end":76582,"line_start":252,"line_end":252,"column_start":5,"column_end":126}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76587,"byte_end":76590,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76595,"byte_end":76709,"line_start":254,"line_end":254,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76714,"byte_end":76729,"line_start":255,"line_end":255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77154,"byte_end":77170,"line_start":265,"line_end":265,"column_start":12,"column_end":28},"name":"take_definitions","qualname":"<SchemaGenerator>::take_definitions","value":"pub fn take_definitions(&mut Self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,\n leaving an empty map in its place.","sig":null,"attributes":[{"value":"/ Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76839,"byte_end":76952,"line_start":260,"line_end":260,"column_start":5,"column_end":118}},{"value":"/ leaving an empty map in its place.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":76957,"byte_end":76995,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77000,"byte_end":77003,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The keys of the returned `Map` are the [schema names](JsonSchema::schema_name), and the values are the schemas","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77008,"byte_end":77122,"line_start":263,"line_end":263,"column_start":5,"column_end":119}},{"value":"/ themselves.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77127,"byte_end":77142,"line_start":264,"line_end":264,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77402,"byte_end":77414,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"visitors_mut","qualname":"<SchemaGenerator>::visitors_mut","value":"pub fn visitors_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the [visitors](SchemaSettings::visitors) being used by this `SchemaGenerator`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77283,"byte_end":77390,"line_start":269,"line_end":269,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77925,"byte_end":77940,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"pub fn root_schema_for<T: ?Sized + JsonSchema>(&mut Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the type `T`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77546,"byte_end":77596,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77601,"byte_end":77604,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77609,"byte_end":77720,"line_start":276,"line_end":276,"column_start":5,"column_end":116}},{"value":"/ add them to the `SchemaGenerator`'s schema definitions and include them in the returned `SchemaObject`'s","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77725,"byte_end":77833,"line_start":277,"line_end":277,"column_start":5,"column_end":113}},{"value":"/ [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":77838,"byte_end":77913,"line_start":278,"line_end":278,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":78808,"byte_end":78828,"line_start":300,"line_end":300,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"pub fn into_root_schema_for<T: ?Sized + JsonSchema>(Self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the type `T`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":78476,"byte_end":78546,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":78551,"byte_end":78554,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `T`'s schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":78559,"byte_end":78670,"line_start":298,"line_end":298,"column_start":5,"column_end":116}},{"value":"/ include them in the returned `SchemaObject`'s [`definitions`](../schema/struct.Metadata.html#structfield.definitions)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":78675,"byte_end":78796,"line_start":299,"line_end":299,"column_start":5,"column_end":126}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":79681,"byte_end":79702,"line_start":321,"line_end":321,"column_start":12,"column_end":33},"name":"root_schema_for_value","qualname":"<SchemaGenerator>::root_schema_for_value","value":"pub fn root_schema_for_value<T: ?Sized + Serialize>(&mut Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Generates a root JSON Schema for the given example value.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":79347,"byte_end":79408,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":79413,"byte_end":79416,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the value implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`root_schema_for()`](Self::root_schema_for())","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":79421,"byte_end":79552,"line_start":319,"line_end":319,"column_start":5,"column_end":136}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":79557,"byte_end":79669,"line_start":320,"line_end":320,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":80812,"byte_end":80838,"line_start":353,"line_end":353,"column_start":12,"column_end":38},"name":"into_root_schema_for_value","qualname":"<SchemaGenerator>::into_root_schema_for_value","value":"pub fn into_root_schema_for_value<T: ?Sized + Serialize>(Self, &T)\n-> Result<RootSchema, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the given example value.","sig":null,"attributes":[{"value":"/ Consumes `self` and generates a root JSON Schema for the given example value.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":80446,"byte_end":80527,"line_start":349,"line_end":349,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":80532,"byte_end":80535,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the value  implements [`JsonSchema`](crate::JsonSchema), then prefer using the [`into_root_schema_for()!`](Self::into_root_schema_for())","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":80540,"byte_end":80683,"line_start":351,"line_end":351,"column_start":5,"column_end":148}},{"value":"/ function which will generally produce a more precise schema, particularly when the value contains any enums.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":80688,"byte_end":80800,"line_start":352,"line_end":352,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82509,"byte_end":82520,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"pub fn dereference<'a>(&'a Self, &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[{"value":"/ Attemps to find the schema that the given `schema` is referencing.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81570,"byte_end":81640,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81645,"byte_end":81648,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If the given `schema` has a [`$ref`](../schema/struct.SchemaObject.html#structfield.reference) property which refers","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81653,"byte_end":81773,"line_start":383,"line_end":383,"column_start":5,"column_end":125}},{"value":"/ to another schema in `self`'s schema definitions, the referenced schema will be returned. Otherwise, returns `None`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81778,"byte_end":81898,"line_start":384,"line_end":384,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81903,"byte_end":81906,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81911,"byte_end":81924,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81929,"byte_end":81936,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use schemars::{JsonSchema, gen::SchemaGenerator};","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81941,"byte_end":81994,"line_start":388,"line_end":388,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":81999,"byte_end":82002,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82007,"byte_end":82032,"line_start":390,"line_end":390,"column_start":5,"column_end":30}},{"value":"/ struct MyStruct {","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82037,"byte_end":82058,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/     foo: i32,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82063,"byte_end":82080,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82085,"byte_end":82090,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82095,"byte_end":82098,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut gen = SchemaGenerator::default();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82103,"byte_end":82148,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/ let ref_schema = gen.subschema_for::<MyStruct>();","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82153,"byte_end":82206,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82211,"byte_end":82214,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(ref_schema.is_ref());","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82219,"byte_end":82252,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82257,"byte_end":82260,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let dereferenced = gen.dereference(&ref_schema);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82265,"byte_end":82317,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82322,"byte_end":82325,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ assert!(dereferenced.is_some());","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82330,"byte_end":82366,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/ assert!(!dereferenced.unwrap().is_ref());","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82371,"byte_end":82416,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(dereferenced, gen.definitions().get(\"MyStruct\"));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82421,"byte_end":82485,"line_start":404,"line_end":404,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":82490,"byte_end":82497,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84589,"byte_end":84599,"line_start":472,"line_end":472,"column_start":11,"column_end":21},"name":"GenVisitor","qualname":"::gen::GenVisitor","value":"GenVisitor: Visitor + Debug + DynClone + Any","parent":null,"children":[{"krate":0,"index":539}],"decl_id":null,"docs":" A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","sig":null,"attributes":[{"value":"/ A [Visitor](Visitor) which implements additional traits required to be included in a [SchemaSettings].","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":83925,"byte_end":84031,"line_start":451,"line_end":451,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84032,"byte_end":84035,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to use this trait directly as it is automatically implemented for any type which implements all of:","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84036,"byte_end":84160,"line_start":453,"line_end":453,"column_start":1,"column_end":125}},{"value":"/ - [`Visitor`]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84161,"byte_end":84178,"line_start":454,"line_end":454,"column_start":1,"column_end":18}},{"value":"/ - [`std::fmt::Debug`]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84179,"byte_end":84204,"line_start":455,"line_end":455,"column_start":1,"column_end":26}},{"value":"/ - [`std::any::Any`] (implemented for all `'static` types)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84205,"byte_end":84266,"line_start":456,"line_end":456,"column_start":1,"column_end":62}},{"value":"/ - [`std::clone::Clone`]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84267,"byte_end":84294,"line_start":457,"line_end":457,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84295,"byte_end":84298,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84299,"byte_end":84312,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84313,"byte_end":84320,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ use schemars::visit::Visitor;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84321,"byte_end":84354,"line_start":461,"line_end":461,"column_start":1,"column_end":34}},{"value":"/ use schemars::gen::GenVisitor;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84355,"byte_end":84389,"line_start":462,"line_end":462,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84390,"byte_end":84393,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone)]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84394,"byte_end":84421,"line_start":464,"line_end":464,"column_start":1,"column_end":28}},{"value":"/ struct MyVisitor;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84422,"byte_end":84443,"line_start":465,"line_end":465,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84444,"byte_end":84447,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ impl Visitor for MyVisitor { }","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84448,"byte_end":84482,"line_start":467,"line_end":467,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84483,"byte_end":84486,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let v: &dyn GenVisitor = &MyVisitor;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84487,"byte_end":84527,"line_start":469,"line_end":469,"column_start":1,"column_end":41}},{"value":"/ assert!(v.as_any().is::<MyVisitor>());","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84528,"byte_end":84570,"line_start":470,"line_end":470,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84571,"byte_end":84578,"line_start":471,"line_end":471,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84756,"byte_end":84762,"line_start":474,"line_end":474,"column_start":8,"column_end":14},"name":"as_any","qualname":"::gen::GenVisitor::as_any","value":"pub fn as_any(&Self) -> &dyn Any","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.\n","sig":null,"attributes":[{"value":"/ Upcasts this visitor into an `Any`, which can be used to inspect and manipulate it as its concrete type.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84640,"byte_end":84748,"line_start":473,"line_end":473,"column_start":5,"column_end":113}}]},{"kind":"Mod","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":1542},{"krate":0,"index":1521},{"krate":0,"index":1527},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":1635},{"krate":0,"index":1549},{"krate":0,"index":1555},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1740},{"krate":0,"index":1639},{"krate":0,"index":1645},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":585},{"krate":0,"index":1849},{"krate":0,"index":1759},{"krate":0,"index":1765},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":587},{"krate":0,"index":1927},{"krate":0,"index":1858},{"krate":0,"index":1864},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":2000},{"krate":0,"index":1935},{"krate":0,"index":1941},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2067},{"krate":0,"index":2006},{"krate":0,"index":2012},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2138},{"krate":0,"index":2071},{"krate":0,"index":2077},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2214},{"krate":0,"index":2145},{"krate":0,"index":2151},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2295},{"krate":0,"index":2222},{"krate":0,"index":2228},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2348},{"krate":0,"index":2310},{"krate":0,"index":2317},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594}],"decl_id":null,"docs":"JSON Schema types.\n","sig":null,"attributes":[{"value":"*\nJSON Schema types.\n*/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85445,"byte_end":85470,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86113,"byte_end":86117,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[{"value":"/ A trivial boolean JSON Schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85915,"byte_end":85949,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85954,"byte_end":85957,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The schema `true` matches everything (always passes validation), whereas the schema `false`","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85962,"byte_end":86057,"line_start":22,"line_end":22,"column_start":5,"column_end":100}},{"value":"/ matches nothing (always fails validation).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86062,"byte_end":86108,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86159,"byte_end":86165,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86129,"byte_end":86154,"line_start":25,"line_end":25,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85902,"byte_end":85908,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"pub enum Schema { Bool(bool), Object(SchemaObject), }","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"/ A JSON Schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85697,"byte_end":85715,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85716,"byte_end":85752,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":85874,"byte_end":85892,"line_start":18,"line_end":18,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86441,"byte_end":86448,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86202,"byte_end":86234,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86239,"byte_end":86242,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86247,"byte_end":86340,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86345,"byte_end":86429,"line_start":33,"line_end":33,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86781,"byte_end":86787,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86537,"byte_end":86585,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86590,"byte_end":86593,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If `self` is a [`SchemaObject`] with `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86598,"byte_end":86733,"line_start":40,"line_end":40,"column_start":5,"column_end":140}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86738,"byte_end":86769,"line_start":41,"line_end":41,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87341,"byte_end":87352,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Schema>::into_object","value":"pub fn into_object(Self) -> SchemaObject","parent":null,"children":[],"decl_id":null,"docs":" Converts the given schema (if it is a boolean schema) into an equivalent schema object.","sig":null,"attributes":[{"value":"/ Converts the given schema (if it is a boolean schema) into an equivalent schema object.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86916,"byte_end":87007,"line_start":49,"line_end":49,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87012,"byte_end":87015,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the given schema is already a schema object, this has no effect.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87020,"byte_end":87091,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87096,"byte_end":87099,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87104,"byte_end":87117,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87122,"byte_end":87129,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::{Schema, SchemaObject};","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87134,"byte_end":87183,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87188,"byte_end":87191,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let bool_schema = Schema::Bool(true);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87196,"byte_end":87237,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87242,"byte_end":87245,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bool_schema.into_object(), SchemaObject::default());","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87250,"byte_end":87317,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87322,"byte_end":87329,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88250,"byte_end":88260,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"/ The root object of a JSON Schema document.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88018,"byte_end":88064,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88195,"byte_end":88238,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88513,"byte_end":88524,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"/ The `$schema` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88267,"byte_end":88293,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88298,"byte_end":88301,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.1.1. The \"$schema\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.1.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88306,"byte_end":88430,"line_start":95,"line_end":95,"column_start":5,"column_end":129}},{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88435,"byte_end":88504,"line_start":96,"line_end":96,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88604,"byte_end":88610,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"/ The root schema itself.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88546,"byte_end":88573,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"serde(flatten)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88578,"byte_end":88595,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89201,"byte_end":89212,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1635},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"/ The `definitions` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88630,"byte_end":88660,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88665,"byte_end":88668,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ In JSON Schema draft 2019-09 this was replaced by $defs, but in Schemars this is still","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88673,"byte_end":88763,"line_start":103,"line_end":103,"column_start":5,"column_end":95}},{"value":"/ serialized as `definitions` for backward-compatibility.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88768,"byte_end":88827,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88832,"byte_end":88835,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.5. Schema Re-Use With \"$defs\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.5),","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88840,"byte_end":88969,"line_start":106,"line_end":106,"column_start":5,"column_end":134}},{"value":"/ and [JSON Schema (draft 07) 9. Schema Re-Use With \"definitions\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-9).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":88974,"byte_end":89123,"line_start":107,"line_end":107,"column_start":5,"column_end":154}},{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89128,"byte_end":89192,"line_start":108,"line_end":108,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89449,"byte_end":89461,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"/ A JSON Schema object.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89238,"byte_end":89263,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89394,"byte_end":89437,"line_start":115,"line_end":115,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89672,"byte_end":89680,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89468,"byte_end":89603,"line_start":117,"line_end":117,"column_start":5,"column_end":140}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89608,"byte_end":89663,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90082,"byte_end":90095,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"/ The `type` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89709,"byte_end":89732,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89737,"byte_end":89740,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.1. \"type\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.1)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89745,"byte_end":89875,"line_start":122,"line_end":122,"column_start":5,"column_end":135}},{"value":"/ and [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":89880,"byte_end":90002,"line_start":123,"line_end":123,"column_start":5,"column_end":127}},{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90007,"byte_end":90073,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90401,"byte_end":90407,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"/ The `format` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90136,"byte_end":90161,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90166,"byte_end":90169,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 7. A Vocabulary for Semantic Content With \"format\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-7).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90174,"byte_end":90338,"line_start":128,"line_end":128,"column_start":5,"column_end":169}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90343,"byte_end":90392,"line_start":129,"line_end":129,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90675,"byte_end":90686,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::Value>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"/ The `enum` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90429,"byte_end":90452,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90457,"byte_end":90460,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.2. \"enum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.2)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90465,"byte_end":90595,"line_start":133,"line_end":133,"column_start":5,"column_end":135}},{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90600,"byte_end":90666,"line_start":134,"line_end":134,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91024,"byte_end":91035,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"/ The `const` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90712,"byte_end":90736,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90741,"byte_end":90744,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.1.3. \"const\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.1.3)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90749,"byte_end":90880,"line_start":138,"line_end":138,"column_start":5,"column_end":136}},{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\n        deserialize_with = \"allow_null\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":90885,"byte_end":91015,"line_start":139,"line_end":143,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91225,"byte_end":91235,"line_start":147,"line_end":147,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91056,"byte_end":91156,"line_start":145,"line_end":145,"column_start":5,"column_end":105}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91161,"byte_end":91216,"line_start":146,"line_end":146,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91430,"byte_end":91436,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91275,"byte_end":91361,"line_start":148,"line_end":148,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91366,"byte_end":91421,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91628,"byte_end":91634,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91473,"byte_end":91559,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91564,"byte_end":91619,"line_start":152,"line_end":152,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91825,"byte_end":91830,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91671,"byte_end":91756,"line_start":154,"line_end":154,"column_start":5,"column_end":90}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91761,"byte_end":91816,"line_start":155,"line_end":155,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92021,"byte_end":92027,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of the [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91866,"byte_end":91952,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":91957,"byte_end":92012,"line_start":158,"line_end":158,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92316,"byte_end":92325,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"/ The `$ref` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92064,"byte_end":92087,"line_start":160,"line_end":160,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92092,"byte_end":92095,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.4.1. Direct References with \"$ref\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.4.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92100,"byte_end":92236,"line_start":162,"line_end":162,"column_start":5,"column_end":141}},{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92241,"byte_end":92307,"line_start":163,"line_end":163,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92499,"byte_end":92509,"line_start":167,"line_end":167,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"std::collections::BTreeMap<std::string::String, serde_json::Value>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"/ Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92347,"byte_end":92468,"line_start":165,"line_end":165,"column_start":5,"column_end":126}},{"value":"serde(flatten)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":92473,"byte_end":92490,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94025,"byte_end":94032,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"pub fn new_ref(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[{"value":"/ Creates a new `$ref` schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93786,"byte_end":93818,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93823,"byte_end":93826,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The given reference string should be a URI reference. This will usually be a JSON Pointer","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93831,"byte_end":93924,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ in [URI Fragment representation](https://tools.ietf.org/html/rfc6901#section-6).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93929,"byte_end":94013,"line_start":218,"line_end":218,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94400,"byte_end":94406,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"pub fn is_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `$ref` schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94179,"byte_end":94227,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94232,"byte_end":94235,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If `self` has `Some` [`reference`](struct.SchemaObject.html#structfield.reference) set, this returns `true`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94240,"byte_end":94352,"line_start":228,"line_end":228,"column_start":5,"column_end":117}},{"value":"/ Otherwise, returns `false`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94357,"byte_end":94388,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94838,"byte_end":94846,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"has_type","qualname":"<SchemaObject>::has_type","value":"pub fn has_type(&Self, InstanceType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` accepts values of the given type, according to the [`instance_type`] field.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94468,"byte_end":94572,"line_start":234,"line_end":234,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94577,"byte_end":94580,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is a basic check that always returns `true` if no `instance_type` is specified on the schema,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94585,"byte_end":94687,"line_start":236,"line_end":236,"column_start":5,"column_end":107}},{"value":"/ and does not check any subschemas. Because of this, both `{}` and  `{\"not\": {}}` accept any type according","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94692,"byte_end":94802,"line_start":237,"line_end":237,"column_start":5,"column_end":115}},{"value":"/ to this method.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":94807,"byte_end":94826,"line_start":238,"line_end":238,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95015,"byte_end":95023,"line_start":245,"line_end":245,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"pub fn metadata(&mut Self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95066,"byte_end":95076,"line_start":246,"line_end":246,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"pub fn subschemas(&mut Self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95130,"byte_end":95136,"line_start":247,"line_end":247,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"pub fn number(&mut Self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95187,"byte_end":95193,"line_start":248,"line_end":248,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"pub fn string(&mut Self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95244,"byte_end":95249,"line_start":249,"line_end":249,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"pub fn array(&mut Self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95299,"byte_end":95305,"line_start":250,"line_end":250,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"pub fn object(&mut Self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95761,"byte_end":95769,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"/ Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95442,"byte_end":95575,"line_start":259,"line_end":259,"column_start":1,"column_end":134}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95706,"byte_end":95749,"line_start":262,"line_end":262,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96010,"byte_end":96012,"line_start":268,"line_end":268,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"/ The `$id` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95776,"byte_end":95798,"line_start":264,"line_end":264,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95803,"byte_end":95806,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 8.2.2. The \"$id\" Keyword](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-8.2.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95811,"byte_end":95931,"line_start":266,"line_end":266,"column_start":5,"column_end":125}},{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95936,"byte_end":96001,"line_start":267,"line_end":267,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96280,"byte_end":96285,"line_start":273,"line_end":273,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"/ The `title` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96034,"byte_end":96058,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96063,"byte_end":96066,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96071,"byte_end":96217,"line_start":271,"line_end":271,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96222,"byte_end":96271,"line_start":272,"line_end":272,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96559,"byte_end":96570,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"/ The `description` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96307,"byte_end":96337,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96342,"byte_end":96345,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.1. \"title\" and \"description\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96350,"byte_end":96496,"line_start":276,"line_end":276,"column_start":5,"column_end":151}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96501,"byte_end":96550,"line_start":277,"line_end":277,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96879,"byte_end":96886,"line_start":286,"line_end":286,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"/ The `default` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96592,"byte_end":96618,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96623,"byte_end":96626,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.2. \"default\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96631,"byte_end":96761,"line_start":281,"line_end":281,"column_start":5,"column_end":135}},{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n        \"allow_null\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96766,"byte_end":96870,"line_start":282,"line_end":285,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97138,"byte_end":97148,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"/ The `deprecated` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96907,"byte_end":96936,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96941,"byte_end":96944,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.3. \"deprecated\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":96949,"byte_end":97082,"line_start":289,"line_end":289,"column_start":5,"column_end":138}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97087,"byte_end":97129,"line_start":290,"line_end":290,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97403,"byte_end":97412,"line_start":296,"line_end":296,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"/ The `readOnly` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97160,"byte_end":97187,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97192,"byte_end":97195,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97200,"byte_end":97347,"line_start":294,"line_end":294,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97352,"byte_end":97394,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97668,"byte_end":97678,"line_start":301,"line_end":301,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"/ The `writeOnly` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97424,"byte_end":97452,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97457,"byte_end":97460,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.4. \"readOnly\" and \"writeOnly\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.4).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97465,"byte_end":97612,"line_start":299,"line_end":299,"column_start":5,"column_end":152}},{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97617,"byte_end":97659,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97922,"byte_end":97930,"line_start":306,"line_end":306,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"/ The `examples` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97690,"byte_end":97717,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97722,"byte_end":97725,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 9.5. \"examples\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-9.5).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97730,"byte_end":97861,"line_start":304,"line_end":304,"column_start":5,"column_end":136}},{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":97866,"byte_end":97913,"line_start":305,"line_end":305,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98318,"byte_end":98337,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98034,"byte_end":98132,"line_start":314,"line_end":314,"column_start":1,"column_end":99}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98263,"byte_end":98306,"line_start":317,"line_end":317,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98558,"byte_end":98564,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"/ The `allOf` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98344,"byte_end":98368,"line_start":319,"line_end":319,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98373,"byte_end":98376,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.1. \"allOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98381,"byte_end":98495,"line_start":321,"line_end":321,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98500,"byte_end":98549,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98805,"byte_end":98811,"line_start":328,"line_end":328,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"/ The `anyOf` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98591,"byte_end":98615,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98620,"byte_end":98623,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.2. \"anyOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98628,"byte_end":98742,"line_start":326,"line_end":326,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98747,"byte_end":98796,"line_start":327,"line_end":327,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99052,"byte_end":99058,"line_start":333,"line_end":333,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"/ The `oneOf` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98838,"byte_end":98862,"line_start":329,"line_end":329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98867,"byte_end":98870,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.3. \"oneOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98875,"byte_end":98989,"line_start":331,"line_end":331,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":98994,"byte_end":99043,"line_start":332,"line_end":332,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99295,"byte_end":99298,"line_start":338,"line_end":338,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"/ The `not` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99085,"byte_end":99107,"line_start":334,"line_end":334,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99112,"byte_end":99115,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.1.4. \"not\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.1.4).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99120,"byte_end":99232,"line_start":336,"line_end":336,"column_start":5,"column_end":117}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99237,"byte_end":99286,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99548,"byte_end":99557,"line_start":343,"line_end":343,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"/ The `if` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99325,"byte_end":99346,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99351,"byte_end":99354,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.1. \"if\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99359,"byte_end":99470,"line_start":341,"line_end":341,"column_start":5,"column_end":116}},{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99475,"byte_end":99539,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99813,"byte_end":99824,"line_start":348,"line_end":348,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"/ The `then` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99584,"byte_end":99607,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99612,"byte_end":99615,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.2. \"then\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99620,"byte_end":99733,"line_start":346,"line_end":346,"column_start":5,"column_end":118}},{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99738,"byte_end":99804,"line_start":347,"line_end":347,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100080,"byte_end":100091,"line_start":353,"line_end":353,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"/ The `else` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99851,"byte_end":99874,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99879,"byte_end":99882,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.2.2.3. \"else\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.2.2.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":99887,"byte_end":100000,"line_start":351,"line_end":351,"column_start":5,"column_end":118}},{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100005,"byte_end":100071,"line_start":352,"line_end":352,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100387,"byte_end":100403,"line_start":360,"line_end":360,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for numbers.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100117,"byte_end":100201,"line_start":356,"line_end":356,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100332,"byte_end":100375,"line_start":359,"line_end":359,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100652,"byte_end":100663,"line_start":365,"line_end":365,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"/ The `multipleOf` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100410,"byte_end":100439,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100444,"byte_end":100447,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.1. \"multipleOf\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100452,"byte_end":100589,"line_start":363,"line_end":363,"column_start":5,"column_end":142}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100594,"byte_end":100643,"line_start":364,"line_end":364,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100918,"byte_end":100925,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"/ The `maximum` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100682,"byte_end":100708,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100713,"byte_end":100716,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.2. \"maximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100721,"byte_end":100855,"line_start":368,"line_end":368,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100860,"byte_end":100909,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2003},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101198,"byte_end":101215,"line_start":375,"line_end":375,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMaximum` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100944,"byte_end":100979,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100984,"byte_end":100987,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.3. \"exclusiveMaximum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":100992,"byte_end":101135,"line_start":373,"line_end":373,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101140,"byte_end":101189,"line_start":374,"line_end":374,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101470,"byte_end":101477,"line_start":380,"line_end":380,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"/ The `minimum` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101234,"byte_end":101260,"line_start":376,"line_end":376,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101265,"byte_end":101268,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.4. \"minimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101273,"byte_end":101407,"line_start":378,"line_end":378,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101412,"byte_end":101461,"line_start":379,"line_end":379,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101750,"byte_end":101767,"line_start":385,"line_end":385,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"/ The `exclusiveMinimum` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101496,"byte_end":101531,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101536,"byte_end":101539,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.2.5. \"exclusiveMinimum\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.5).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101544,"byte_end":101687,"line_start":383,"line_end":383,"column_start":5,"column_end":148}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101692,"byte_end":101741,"line_start":384,"line_end":384,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102055,"byte_end":102071,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for strings.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":101785,"byte_end":101869,"line_start":388,"line_end":388,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102000,"byte_end":102043,"line_start":391,"line_end":391,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102318,"byte_end":102328,"line_start":397,"line_end":397,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"/ The `maxLength` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102078,"byte_end":102106,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102111,"byte_end":102114,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.1. \"maxLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102119,"byte_end":102255,"line_start":395,"line_end":395,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102260,"byte_end":102309,"line_start":396,"line_end":396,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102587,"byte_end":102597,"line_start":402,"line_end":402,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"/ The `minLength` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102347,"byte_end":102375,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102380,"byte_end":102383,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.2. \"minLength\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102388,"byte_end":102524,"line_start":400,"line_end":400,"column_start":5,"column_end":141}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102529,"byte_end":102578,"line_start":401,"line_end":401,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102852,"byte_end":102859,"line_start":407,"line_end":407,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"/ The `pattern` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102616,"byte_end":102642,"line_start":403,"line_end":403,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102647,"byte_end":102650,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.3.3. \"pattern\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102655,"byte_end":102789,"line_start":405,"line_end":405,"column_start":5,"column_end":139}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102794,"byte_end":102843,"line_start":406,"line_end":406,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103149,"byte_end":103164,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for arrays.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":102880,"byte_end":102963,"line_start":410,"line_end":410,"column_start":1,"column_end":84}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103094,"byte_end":103137,"line_start":413,"line_end":413,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103385,"byte_end":103390,"line_start":419,"line_end":419,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"/ The `items` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103171,"byte_end":103195,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103200,"byte_end":103203,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.1. \"items\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103208,"byte_end":103322,"line_start":417,"line_end":417,"column_start":5,"column_end":119}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103327,"byte_end":103376,"line_start":418,"line_end":418,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103659,"byte_end":103675,"line_start":424,"line_end":424,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"/ The `additionalItems` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103425,"byte_end":103459,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103464,"byte_end":103467,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.2. \"additionalItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103472,"byte_end":103596,"line_start":422,"line_end":422,"column_start":5,"column_end":129}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103601,"byte_end":103650,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103940,"byte_end":103949,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"/ The `maxItems` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103702,"byte_end":103729,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103734,"byte_end":103737,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.1. \"maxItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103742,"byte_end":103877,"line_start":427,"line_end":427,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103882,"byte_end":103931,"line_start":428,"line_end":428,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104206,"byte_end":104215,"line_start":434,"line_end":434,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"/ The `minItems` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":103968,"byte_end":103995,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104000,"byte_end":104003,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.2. \"minItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104008,"byte_end":104143,"line_start":432,"line_end":432,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104148,"byte_end":104197,"line_start":433,"line_end":433,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104478,"byte_end":104490,"line_start":439,"line_end":439,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"/ The `uniqueItems` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104234,"byte_end":104264,"line_start":435,"line_end":435,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104269,"byte_end":104272,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.4.3. \"uniqueItems\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104277,"byte_end":104415,"line_start":437,"line_end":437,"column_start":5,"column_end":143}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104420,"byte_end":104469,"line_start":438,"line_end":438,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104730,"byte_end":104738,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"/ The `contains` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104510,"byte_end":104537,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104542,"byte_end":104545,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.1.4. \"contains\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.1.4).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104550,"byte_end":104667,"line_start":442,"line_end":442,"column_start":5,"column_end":122}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104672,"byte_end":104721,"line_start":443,"line_end":443,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105034,"byte_end":105050,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"/ Properties of a [`SchemaObject`] which define validation assertions for objects.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104764,"byte_end":104848,"line_start":447,"line_end":447,"column_start":1,"column_end":85}},{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":104979,"byte_end":105022,"line_start":450,"line_end":450,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105305,"byte_end":105319,"line_start":456,"line_end":456,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"/ The `maxProperties` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105057,"byte_end":105089,"line_start":452,"line_end":452,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105094,"byte_end":105097,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.1. \"maxProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105102,"byte_end":105242,"line_start":454,"line_end":454,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105247,"byte_end":105296,"line_start":455,"line_end":455,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105586,"byte_end":105600,"line_start":461,"line_end":461,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"/ The `minProperties` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105338,"byte_end":105370,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105375,"byte_end":105378,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.2. \"minProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105383,"byte_end":105523,"line_start":459,"line_end":459,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105528,"byte_end":105577,"line_start":460,"line_end":460,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105855,"byte_end":105863,"line_start":466,"line_end":466,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"/ The `required` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105619,"byte_end":105646,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105651,"byte_end":105654,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema Validation 6.5.3. \"required\"](https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.5.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105659,"byte_end":105794,"line_start":464,"line_end":464,"column_start":5,"column_end":140}},{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105799,"byte_end":105846,"line_start":465,"line_end":465,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106104,"byte_end":106114,"line_start":471,"line_end":471,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"/ The `properties` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105882,"byte_end":105911,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105916,"byte_end":105919,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.1. \"properties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":105924,"byte_end":106043,"line_start":469,"line_end":469,"column_start":5,"column_end":124}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106048,"byte_end":106095,"line_start":470,"line_end":470,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106377,"byte_end":106395,"line_start":476,"line_end":476,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"/ The `patternProperties` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106141,"byte_end":106177,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106182,"byte_end":106185,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.2. \"patternProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.2).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106190,"byte_end":106316,"line_start":474,"line_end":474,"column_start":5,"column_end":131}},{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106321,"byte_end":106368,"line_start":475,"line_end":475,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106666,"byte_end":106687,"line_start":481,"line_end":481,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"/ The `additionalProperties` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106422,"byte_end":106461,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106466,"byte_end":106469,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.3. \"additionalProperties\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.3).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106474,"byte_end":106603,"line_start":479,"line_end":479,"column_start":5,"column_end":134}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106608,"byte_end":106657,"line_start":480,"line_end":480,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106944,"byte_end":106958,"line_start":486,"line_end":486,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"/ The `propertyNames` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106714,"byte_end":106746,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106751,"byte_end":106754,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ See [JSON Schema 9.3.2.5. \"propertyNames\"](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-9.3.2.5).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106759,"byte_end":106881,"line_start":484,"line_end":484,"column_start":5,"column_end":127}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106886,"byte_end":106935,"line_start":485,"line_end":485,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107387,"byte_end":107391,"line_start":496,"line_end":496,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107397,"byte_end":107404,"line_start":497,"line_end":497,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107410,"byte_end":107416,"line_start":498,"line_end":498,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107422,"byte_end":107427,"line_start":499,"line_end":499,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107433,"byte_end":107439,"line_start":500,"line_end":500,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107445,"byte_end":107451,"line_start":501,"line_end":501,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107457,"byte_end":107464,"line_start":502,"line_end":502,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":2295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107368,"byte_end":107380,"line_start":495,"line_end":495,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"pub enum InstanceType {\n    Null,\n    Boolean,\n    Object,\n    Array,\n    Number,\n    String,\n    Integer,\n}","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"/ The possible types of values in JSON Schema documents.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":106984,"byte_end":107042,"line_start":489,"line_end":489,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107043,"byte_end":107046,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ See [JSON Schema 4.2.1. Instance Data Model](https://tools.ietf.org/html/draft-handrews-json-schema-02#section-4.2.1).","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107047,"byte_end":107169,"line_start":491,"line_end":491,"column_start":1,"column_end":123}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107324,"byte_end":107358,"line_start":494,"line_end":494,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107833,"byte_end":107839,"line_start":512,"line_end":512,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":2348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107853,"byte_end":107856,"line_start":513,"line_end":513,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":2348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107812,"byte_end":107823,"line_start":511,"line_end":511,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"pub enum SingleOrVec<T> { Single(Box<T>), Vec(Vec<T>), }","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2353}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"/ A type which can be serialized as a single item, or multiple items.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107469,"byte_end":107540,"line_start":505,"line_end":505,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107541,"byte_end":107544,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ In some contexts, a `Single` may be semantically distinct from a `Vec` containing only item.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107545,"byte_end":107641,"line_start":507,"line_end":507,"column_start":1,"column_end":97}},{"value":"serde(untagged)","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107784,"byte_end":107802,"line_start":510,"line_end":510,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108630,"byte_end":108638,"line_start":545,"line_end":545,"column_start":12,"column_end":20},"name":"contains","qualname":"<SingleOrVec<T>>::contains","value":"pub fn contains(&Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is either a `Single` equal to `x`, or a `Vec` containing `x`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108150,"byte_end":108240,"line_start":529,"line_end":529,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108245,"byte_end":108248,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108253,"byte_end":108267,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108272,"byte_end":108275,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108280,"byte_end":108287,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use schemars::schema::SingleOrVec;","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108292,"byte_end":108330,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108335,"byte_end":108338,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let s = SingleOrVec::from(10);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108343,"byte_end":108377,"line_start":536,"line_end":536,"column_start":5,"column_end":39}},{"value":"/ assert!(s.contains(&10));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108382,"byte_end":108411,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ assert!(!s.contains(&20));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108416,"byte_end":108446,"line_start":538,"line_end":538,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108451,"byte_end":108454,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let v = SingleOrVec::from(vec![10, 20]);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108459,"byte_end":108503,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"/ assert!(v.contains(&10));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108508,"byte_end":108537,"line_start":541,"line_end":541,"column_start":5,"column_end":34}},{"value":"/ assert!(v.contains(&20));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108542,"byte_end":108571,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/ assert!(!v.contains(&30));","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108576,"byte_end":108606,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108611,"byte_end":108618,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":629},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":632},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":634}],"decl_id":null,"docs":"Contains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.","sig":null,"attributes":[{"value":"*\nContains the [`Visitor`] trait, used to recursively modify a constructed schema and its subschemas.\n\nSometimes you may want to apply a change to a schema, as well as all schemas contained within it.\nThe easiest way to achieve this is by defining a type that implements [`Visitor`].\nAll methods of `Visitor` have a default implementation that makes no change but recursively visits all subschemas.\nWhen overriding one of these methods, you will *usually* want to still call this default implementation.\n\n# Example\nTo add a custom property to all schemas:\n```\nuse schemars::schema::SchemaObject;\nuse schemars::visit::{Visitor, visit_schema_object};\n\npub struct MyVisitor;\n\nimpl Visitor for MyVisitor {\n    fn visit_schema_object(&mut self, schema: &mut SchemaObject) {\n        // First, make our change to this schema\n        schema.extensions.insert(\"my_property\".to_string(), serde_json::json!(\"hello world\"));\n\n        // Then delegate to default implementation to visit any subschemas\n        visit_schema_object(self, schema);\n    }\n}\n```\n*/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":109358,"byte_end":110406,"line_start":1,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110564,"byte_end":110571,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::visit::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Trait used to recursively modify a constructed schema and its subschemas.\n","sig":null,"attributes":[{"value":"/ Trait used to recursively modify a constructed schema and its subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110476,"byte_end":110553,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110801,"byte_end":110818,"line_start":35,"line_end":35,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::Visitor::visit_root_schema","value":"pub fn visit_root_schema(&mut Self, &mut RootSchema)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`RootSchema`] and (optionally) its subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110578,"byte_end":110662,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110667,"byte_end":110670,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_root_schema`] function to visit subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110675,"byte_end":110793,"line_start":34,"line_end":34,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111118,"byte_end":111130,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::Visitor::visit_schema","value":"pub fn visit_schema(&mut Self, &mut Schema)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`Schema`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`Schema`] and (optionally) its subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110904,"byte_end":110984,"line_start":39,"line_end":39,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110989,"byte_end":110992,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema`] function to visit subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":110997,"byte_end":111110,"line_start":41,"line_end":41,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111438,"byte_end":111457,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::Visitor::visit_schema_object","value":"pub fn visit_schema_object(&mut Self, &mut SchemaObject)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","sig":null,"attributes":[{"value":"/ Override this method to modify a [`SchemaObject`] and (optionally) its subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111211,"byte_end":111297,"line_start":46,"line_end":46,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111302,"byte_end":111305,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When overriding this method, you will usually want to call the [`visit_schema_object`] function to visit subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111310,"byte_end":111430,"line_start":48,"line_end":48,"column_start":5,"column_end":125}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111605,"byte_end":111622,"line_start":55,"line_end":55,"column_start":8,"column_end":25},"name":"visit_root_schema","qualname":"::visit::visit_root_schema","value":"pub fn visit_root_schema<V: Visitor + ?Sized>(&mut V, &mut RootSchema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`RootSchema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`RootSchema`].","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111549,"byte_end":111597,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111828,"byte_end":111840,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"visit_schema","qualname":"::visit::visit_schema","value":"pub fn visit_schema<V: Visitor + ?Sized>(&mut V, &mut Schema)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`Schema`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`Schema`].","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111776,"byte_end":111820,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":112046,"byte_end":112065,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"visit_schema_object","qualname":"::visit::visit_schema_object","value":"pub fn visit_schema_object<V: Visitor + ?Sized>(&mut V, &mut SchemaObject)","parent":null,"children":[],"decl_id":null,"docs":" Visits all subschemas of the [`SchemaObject`].\n","sig":null,"attributes":[{"value":"/ Visits all subschemas of the [`SchemaObject`].","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":111988,"byte_end":112038,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":113975,"byte_end":113993,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"ReplaceBoolSchemas","qualname":"::visit::ReplaceBoolSchemas","value":"ReplaceBoolSchemas { skip_additional_properties }","parent":null,"children":[{"krate":0,"index":2357}],"decl_id":null,"docs":" This visitor will replace all boolean JSON Schemas with equivalent object schemas.","sig":null,"attributes":[{"value":"/ This visitor will replace all boolean JSON Schemas with equivalent object schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":113742,"byte_end":113828,"line_start":125,"line_end":125,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":113829,"byte_end":113832,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support booleans as schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":113833,"byte_end":113939,"line_start":127,"line_end":127,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":114111,"byte_end":114137,"line_start":131,"line_end":131,"column_start":9,"column_end":35},"name":"skip_additional_properties","qualname":"::visit::ReplaceBoolSchemas::skip_additional_properties","value":"bool","parent":{"krate":0,"index":2356},"children":[],"decl_id":null,"docs":" When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.\n","sig":null,"attributes":[{"value":"/ When set to `true`, a schema's `additionalProperties` property will not be changed from a boolean.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":114000,"byte_end":114102,"line_start":130,"line_end":130,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115352,"byte_end":115369,"line_start":166,"line_end":166,"column_start":12,"column_end":29},"name":"RemoveRefSiblings","qualname":"::visit::RemoveRefSiblings","value":"","parent":null,"children":[],"decl_id":null,"docs":" This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","sig":null,"attributes":[{"value":"/ This visitor will restructure JSON Schema objects so that the `$ref` property will never appear alongside any other properties.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115064,"byte_end":115195,"line_start":162,"line_end":162,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115196,"byte_end":115199,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. Draft 7) that do not support other properties alongside `$ref`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115200,"byte_end":115316,"line_start":164,"line_end":164,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116300,"byte_end":116316,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"SetSingleExample","qualname":"::visit::SetSingleExample","value":"SetSingleExample { retain_examples }","parent":null,"children":[{"krate":0,"index":2369}],"decl_id":null,"docs":" This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","sig":null,"attributes":[{"value":"/ This visitor will remove the `examples` schema property and (if present) set its first value as the `example` property.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116026,"byte_end":116149,"line_start":187,"line_end":187,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116150,"byte_end":116153,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is useful for dialects of JSON Schema (e.g. OpenAPI 3.0) that do not support the `examples` property.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116154,"byte_end":116264,"line_start":189,"line_end":189,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116455,"byte_end":116470,"line_start":193,"line_end":193,"column_start":9,"column_end":24},"name":"retain_examples","qualname":"::visit::SetSingleExample::retain_examples","value":"bool","parent":{"krate":0,"index":2368},"children":[],"decl_id":null,"docs":" When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the `examples` property will not be removed, but its first value will still be copied to `example`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116323,"byte_end":116446,"line_start":192,"line_end":192,"column_start":5,"column_end":128}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10567,"byte_end":10577,"line_start":350,"line_end":350,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[{"value":"/ A type which can be described as a JSON Schema document.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10117,"byte_end":10177,"line_start":333,"line_end":333,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10178,"byte_end":10181,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ This is implemented for many Rust primitive and standard library types.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10182,"byte_end":10257,"line_start":335,"line_end":335,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10258,"byte_end":10261,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ This can also be automatically derived on most custom types with `#[derive(JsonSchema)]`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10262,"byte_end":10355,"line_start":337,"line_end":337,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10356,"byte_end":10359,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10360,"byte_end":10373,"line_start":339,"line_end":339,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10374,"byte_end":10381,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ use schemars::{schema_for, JsonSchema};","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10382,"byte_end":10425,"line_start":341,"line_end":341,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10426,"byte_end":10429,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ #[derive(JsonSchema)]","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10430,"byte_end":10455,"line_start":343,"line_end":343,"column_start":1,"column_end":26}},{"value":"/ struct MyStruct {","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10456,"byte_end":10477,"line_start":344,"line_end":344,"column_start":1,"column_end":22}},{"value":"/     foo: i32,","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10478,"byte_end":10495,"line_start":345,"line_end":345,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10496,"byte_end":10501,"line_start":346,"line_end":346,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10502,"byte_end":10505,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ let my_schema = schema_for!(MyStruct);","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10506,"byte_end":10548,"line_start":348,"line_end":348,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10549,"byte_end":10556,"line_start":349,"line_end":349,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10990,"byte_end":11006,"line_start":357,"line_end":357,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"pub fn is_referenceable() -> bool","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[{"value":"/ Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10584,"byte_end":10691,"line_start":351,"line_end":351,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10696,"byte_end":10699,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ For trivial types (such as primitives), this should return `false`. For more complex types, it should return `true`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10704,"byte_end":10824,"line_start":353,"line_end":353,"column_start":5,"column_end":125}},{"value":"/ For recursive types, this **must** return `true` to prevent infinite cycles when generating schemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10829,"byte_end":10933,"line_start":354,"line_end":354,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10938,"byte_end":10941,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ By default, this returns `true`.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":10946,"byte_end":10982,"line_start":356,"line_end":356,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11222,"byte_end":11233,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"pub fn schema_name() -> String","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[{"value":"/ The name of the generated JSON Schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11043,"byte_end":11085,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11090,"byte_end":11093,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This is used as the title for root schemas, and the key within the root's `definitions` property for subschemas.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11098,"byte_end":11214,"line_start":363,"line_end":363,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11577,"byte_end":11588,"line_start":372,"line_end":372,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"pub fn json_schema(&mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[{"value":"/ Generates a JSON Schema for this type.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11252,"byte_end":11294,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11299,"byte_end":11302,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ If the returned schema depends on any [referenceable](JsonSchema::is_referenceable) schemas, then this method will","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11307,"byte_end":11425,"line_start":368,"line_end":368,"column_start":5,"column_end":123}},{"value":"/ add them to the [`SchemaGenerator`](gen::SchemaGenerator)'s schema definitions.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11430,"byte_end":11513,"line_start":369,"line_end":369,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11518,"byte_end":11521,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This should not return a `$ref` schema.","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11526,"byte_end":11569,"line_start":371,"line_end":371,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11707,"byte_end":11749,"line_start":376,"line_end":376,"column_start":8,"column_end":50},"name":"_schemars_private_non_optional_json_schema","qualname":"::JsonSchema::_schemars_private_non_optional_json_schema","value":"pub fn _schemars_private_non_optional_json_schema(&mut gen::SchemaGenerator)\n-> Schema","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":11906,"byte_end":11933,"line_start":382,"line_end":382,"column_start":8,"column_end":35},"name":"_schemars_private_is_option","qualname":"::JsonSchema::_schemars_private_is_option","value":"pub fn _schemars_private_is_option() -> bool","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":12971,"byte_end":12977,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":14121,"byte_end":14127,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":15283,"byte_end":15291,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16404,"byte_end":16410,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16640,"byte_end":16643,"line_start":118,"line_end":118,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16774,"byte_end":16777,"line_start":125,"line_end":125,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16900,"byte_end":16903,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":17072,"byte_end":17075,"line_start":142,"line_end":142,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":17192,"byte_end":17203,"line_start":149,"line_end":149,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":24149,"byte_end":24155,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":26230,"byte_end":26236,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":27265,"byte_end":27270,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":28602,"byte_end":28607,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\ffi.rs","byte_start":31593,"byte_end":31601,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\serdejson.rs","byte_start":41811,"byte_end":41816,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\serdejson.rs","byte_start":42087,"byte_end":42093,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\time.rs","byte_start":42569,"byte_end":42577,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\time.rs","byte_start":43214,"byte_end":43224,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":48969,"byte_end":48979,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":56795,"byte_end":56805,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":57146,"byte_end":57156,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":57538,"byte_end":57550,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":58700,"byte_end":58714,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":59759,"byte_end":59773,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":60170,"byte_end":60182,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":61647,"byte_end":61659,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66911,"byte_end":66912,"line_start":61,"line_end":61,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66936,"byte_end":66957,"line_start":63,"line_end":63,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69480,"byte_end":69494,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69582,"byte_end":69596,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73099,"byte_end":73114,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73357,"byte_end":73372,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73471,"byte_end":73486,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":83355,"byte_end":83373,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":83625,"byte_end":83643,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84854,"byte_end":84855,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86189,"byte_end":86195,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87842,"byte_end":87848,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87945,"byte_end":87951,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93767,"byte_end":93779,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95351,"byte_end":95363,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107889,"byte_end":107900,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108019,"byte_end":108030,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108129,"byte_end":108140,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":114165,"byte_end":114183,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115389,"byte_end":115406,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116498,"byte_end":116514,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9808,"byte_end":9816,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":418}},{"kind":"Mod","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9826,"byte_end":9829,"line_start":318,"line_end":318,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":459}},{"kind":"Mod","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9839,"byte_end":9845,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":543}},{"kind":"Mod","span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\lib.rs","byte_start":9855,"byte_end":9860,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":597}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":12971,"byte_end":12977,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":13476,"byte_end":13481,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":14121,"byte_end":14127,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":43434},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":15283,"byte_end":15291,"line_start":72,"line_end":72,"column_start":16,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1849},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16404,"byte_end":16410,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":43434},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16640,"byte_end":16643,"line_start":118,"line_end":118,"column_start":26,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16774,"byte_end":16777,"line_start":125,"line_end":125,"column_start":19,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":16900,"byte_end":16903,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":17072,"byte_end":17075,"line_start":142,"line_end":142,"column_start":24,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\flatten.rs","byte_start":17192,"byte_end":17203,"line_start":149,"line_end":149,"column_start":16,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2348},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":24149,"byte_end":24155,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":43434},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":26230,"byte_end":26236,"line_start":67,"line_end":67,"column_start":51,"column_end":57},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":43560},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":27265,"byte_end":27270,"line_start":97,"line_end":97,"column_start":36,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":42108},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\core.rs","byte_start":28602,"byte_end":28607,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":41993},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\ffi.rs","byte_start":31593,"byte_end":31601,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":2780},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\serdejson.rs","byte_start":41811,"byte_end":41816,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":15,"index":2531},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\serdejson.rs","byte_start":42087,"byte_end":42093,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":15,"index":2868},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\time.rs","byte_start":42569,"byte_end":42577,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":2,"index":46026},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\json_schema_impls\\time.rs","byte_start":43214,"byte_end":43224,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":1,"index":10935},"to":{"krate":0,"index":645}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":48969,"byte_end":48979,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":314},"to":{"krate":16,"index":2082}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":56795,"byte_end":56805,"line_start":304,"line_end":304,"column_start":44,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":314},"to":{"krate":16,"index":2150}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":57146,"byte_end":57156,"line_start":320,"line_end":320,"column_start":45,"column_end":55},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":314},"to":{"krate":16,"index":2174}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":57538,"byte_end":57550,"line_start":340,"line_end":340,"column_start":35,"column_end":47},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":318},"to":{"krate":16,"index":2132}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":58700,"byte_end":58714,"line_start":380,"line_end":380,"column_start":37,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":322},"to":{"krate":16,"index":2138}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":59759,"byte_end":59773,"line_start":417,"line_end":417,"column_start":43,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":322},"to":{"krate":16,"index":2144}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":60170,"byte_end":60182,"line_start":433,"line_end":433,"column_start":35,"column_end":47},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":327},"to":{"krate":16,"index":2156}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\ser.rs","byte_start":61647,"byte_end":61659,"line_start":485,"line_end":485,"column_start":38,"column_end":50},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":327},"to":{"krate":16,"index":2167}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66810,"byte_end":66815,"line_start":55,"line_end":55,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66911,"byte_end":66912,"line_start":61,"line_end":61,"column_start":25,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":452}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\_private.rs","byte_start":66936,"byte_end":66957,"line_start":63,"line_end":63,"column_start":20,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69480,"byte_end":69494,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":69582,"byte_end":69596,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73099,"byte_end":73114,"line_start":158,"line_end":158,"column_start":16,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1501},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73357,"byte_end":73372,"line_start":168,"line_end":168,"column_start":31,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1501},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":73471,"byte_end":73486,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":83355,"byte_end":83373,"line_start":431,"line_end":431,"column_start":18,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":83625,"byte_end":83643,"line_start":438,"line_end":438,"column_start":23,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84601,"byte_end":84608,"line_start":472,"line_end":472,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84611,"byte_end":84616,"line_start":472,"line_end":472,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":9401},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84619,"byte_end":84627,"line_start":472,"line_end":472,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":20,"index":35},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84630,"byte_end":84633,"line_start":472,"line_end":472,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3677},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\gen.rs","byte_start":84854,"byte_end":84855,"line_start":479,"line_end":479,"column_start":24,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":541},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":86189,"byte_end":86195,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87842,"byte_end":87848,"line_start":76,"line_end":76,"column_start":29,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":87945,"byte_end":87951,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":93767,"byte_end":93779,"line_start":214,"line_end":214,"column_start":6,"column_end":18},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":95351,"byte_end":95363,"line_start":253,"line_end":253,"column_start":23,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":107889,"byte_end":107900,"line_start":516,"line_end":516,"column_start":21,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2348},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108019,"byte_end":108030,"line_start":522,"line_end":522,"column_start":26,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2348},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\schema.rs","byte_start":108129,"byte_end":108140,"line_start":528,"line_end":528,"column_start":20,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":114165,"byte_end":114183,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2356},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":115389,"byte_end":115406,"line_start":168,"line_end":168,"column_start":18,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2362},"to":{"krate":0,"index":611}},{"span":{"file_name":"C:\\Users\\dragon\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schemars-0.8.8\\src\\visit.rs","byte_start":116498,"byte_end":116514,"line_start":196,"line_end":196,"column_start":18,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2368},"to":{"krate":0,"index":611}}]}